<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.example.domain.Role">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="roleName" jdbcType="CHAR" property="roleName" />
    <result column="description" jdbcType="CHAR" property="description" />
    <result column="creatorId" jdbcType="BIGINT" property="creatorId" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="isOrg" jdbcType="INTEGER" property="isOrg" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, createTime, roleName, description, creatorId, status, isOrg, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.example.domain.Role" useGeneratedKeys="true">
    insert into role (createTime, roleName, description, 
      creatorId, status, isOrg, 
      updateTime)
    values (#{createTime,jdbcType=TIMESTAMP}, #{roleName,jdbcType=CHAR}, #{description,jdbcType=CHAR}, 
      #{creatorId,jdbcType=BIGINT}, #{status,jdbcType=CHAR}, #{isOrg,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.example.domain.Role" useGeneratedKeys="true">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        createTime,
      </if>
      <if test="roleName != null">
        roleName,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="creatorId != null">
        creatorId,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isOrg != null">
        isOrg,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=CHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=CHAR},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="isOrg != null">
        #{isOrg,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.domain.Role">
    update role
    <set>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleName != null">
        roleName = #{roleName,jdbcType=CHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=CHAR},
      </if>
      <if test="creatorId != null">
        creatorId = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="isOrg != null">
        isOrg = #{isOrg,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.domain.Role">
    update role
    set createTime = #{createTime,jdbcType=TIMESTAMP},
      roleName = #{roleName,jdbcType=CHAR},
      description = #{description,jdbcType=CHAR},
      creatorId = #{creatorId,jdbcType=BIGINT},
      status = #{status,jdbcType=CHAR},
      isOrg = #{isOrg,jdbcType=INTEGER},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>